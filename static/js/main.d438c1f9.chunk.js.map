{"version":3,"sources":["logo.svg","Post/users/view/view.js","Post/users/create/FormAddUser.js","Post/users/edit/EditUser.js","Post/users/search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["view","this","props","DataUsers","map","user","className","name","email","phone","onClick","editUser","bind","id","deleteUser","Component","FormAddUser","state","fields","errors","e","formIsValid","match","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","some","toUpperCase","setState","preventDefault","handleValidation","AddUser","swal","title","text","icon","button","field","target","value","onSubmit","contactSubmit","refs","type","placeholder","autoFocus","onChange","handleChange","pattern","oonkeypress","EditUser","SaveEdit","GoBack","Search","data","found","edit","UserFound","filter","deleteuser","edituser","getData","setInterval","required","ref","input","textemail","App","Data","users","showEditUser","username","useremail","userphone","newUser","newData","src","logo","alt","style","linkStyle","to","exact","path","color","textDecoration","fontWeight","Hover","backgroungColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d438c1f9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport './view.css';\r\n\r\nclass view extends Component{\r\n\r\n    render(){   \r\n        return  this.props.DataUsers.map( user =>              \r\n            <div className=\"r-d\" key={user.id}>  \r\n                <div className=\"r-d-user\">  {user.name}  </div>\r\n                <div className=\"r-d-email\">  {user.email}  </div>                    \r\n                <div className=\"r-d-phone\"> {user.phone} </div>   \r\n                <div className=\"r-d-action\">                         \r\n                    <button className=\"btnEdit\" onClick={this.props.editUser.bind(this, user.id,user.name, user.email, user.phone )} > \r\n                        Editar                \r\n                    </button> \r\n                    <button className=\"btnDelete\" onClick={this.props.deleteUser.bind(this, user.id)} > \r\n                        Eliminar                \r\n                    </button>                                                                    \r\n                </div> \r\n                <br />            \r\n            </div>    \r\n        )}\r\n}\r\n\r\nexport default view;","import React, { Component } from 'react';\r\nimport swal from 'sweetalert';\r\n\r\nexport default class FormAddUser extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.state = {\r\n          fields: {},\r\n          errors: {}\r\n        }\r\n      }\r\n    \r\n      handleValidation(e){\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n    \r\n        //Name\r\n        if(!fields[\"name\"]){\r\n          formIsValid = false;\r\n          errors[\"name\"] = \"Ingrese un Nombre\";\r\n        }\r\n    \r\n        if(typeof fields[\"name\"] !== \"undefined\"){\r\n          if(!fields[\"name\"].match(/^[a-zA-Z ]+$/)){\r\n            formIsValid = false;\r\n            errors[\"name\"] = \"El nombre debe contener solo letras\";\r\n          }      \t\r\n        }\r\n    \r\n        //Email\r\n        if(!fields[\"email\"]){\r\n          formIsValid = false;\r\n          errors[\"email\"] = \"Ingrese un Email\";\r\n        }\r\n    \r\n        if(typeof fields[\"email\"] !== \"undefined\"){\r\n          let lastAtPos = fields[\"email\"].lastIndexOf('@');\r\n          let lastDotPos = fields[\"email\"].lastIndexOf('.');\r\n\r\n          if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"Ingrese un Email valido\";\r\n          }\r\n          if(this.props.DataUsers.some(user => user.email.toUpperCase() === fields[\"email\"].toUpperCase() )){            \r\n            formIsValid = false;    \r\n            errors[\"email\"] = \"El Email: \"+fields[\"email\"]+\" se ecuentra registrado, Ingrese otro Email\";\r\n          }          \r\n        }\r\n    \r\n        //Phone\r\n        if(!fields[\"phone\"]){  \r\n          formIsValid = false;\r\n          errors[\"phone\"] = \"Ingrese un Numero de Telefono\";\r\n        }\r\n        \r\n        if(typeof fields[\"phone\"] !== \"undefined\" ){\r\n            let phonelenhth = fields[\"phone\"].length;\r\n            if( phonelenhth < 11 ){\r\n                formIsValid = false;\r\n                errors[\"phone\"] = \"Ingrese un numero de telefono correcto, incluyendo en codigo de la linea, debe contener 11 digitos\";\r\n            }           \r\n        }\r\n    \r\n        this.setState({errors: errors});\r\n        return formIsValid;\r\n      }     \r\n    \r\n      contactSubmit(e){\r\n        e.preventDefault();      \r\n        if(this.handleValidation()){\r\n            let fields = this.state.fields;            \r\n            this.props.AddUser(fields[\"name\"], fields[\"email\"], fields[\"phone\"]); \r\n                swal({\r\n                    title: \"Mensaje\",\r\n                    text: \"Usuario Registrado\",\r\n                    icon: \"success\",\r\n                    button: \"Aceptar\"\r\n                });     \r\n                fields[\"name\"] = '';\r\n                fields[\"email\"] = '';\r\n                fields[\"phone\"] = '';                                 \r\n        }    \r\n      }\r\n    \r\n      handleChange(field, e){    \t\t\r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;        \r\n        this.setState({fields});\r\n      }\r\n    \r\n      render(){\r\n        return (\r\n            <div className=\"content\">\r\n                <div className=\"content-form\">                        \t\r\n                    <form name=\"contactform\" className=\"formAddUser\"  onSubmit= {this.contactSubmit.bind(this)}>\r\n                    <h2>Añadir Usuario </h2>  \r\n                        <div className=\"campo\">\r\n                            <input \r\n                                className=\"Campoinput\"\r\n                                refs=\"name\" \r\n                                type=\"text\" \r\n                                placeholder=\"Ingrese un Nombre\"\r\n                                autoFocus={true} \r\n                                onChange={this.handleChange.bind(this, \"name\")} \r\n                                value={this.state.fields[\"name\"]}\r\n                            />\r\n                            <span className=\"error\">{this.state.errors[\"name\"]}</span>\r\n                        </div>\r\n                        <div className=\"campo\">\r\n                            <input \r\n                                className=\"Campoinput\"\r\n                                refs=\"email\" \r\n                                type=\"text\" \r\n                                placeholder=\"Ingrese un Email\" \r\n                                onChange={this.handleChange.bind(this, \"email\")} \r\n                                value={this.state.fields[\"email\"]}\r\n                            />\r\n                            <span className=\"error\">{this.state.errors[\"email\"]}</span>                            \r\n                        </div>                      \r\n                        <div className=\"campo\">\r\n                            <input \r\n                                className=\"Campoinput\"\r\n                                refs=\"phone\" \r\n                                id=\"phone\"\r\n                                pattern=\"[0-9]{0,11}\" \r\n                                placeholder=\"Ingrese un numero de Telefono\" \r\n                                onChange={this.handleChange.bind(this, \"phone\")} \r\n                                value={this.state.fields[\"phone\"]}\r\n                                oonkeypress=\"if ( isNaN( String.fromCharCode(event.keyCode) )) return false;\"\r\n                            />\r\n                            <span className=\"error\">{this.state.errors[\"phone\"]}</span>                            \r\n                        </div> \r\n                        <div className=\"campo\">\r\n                            <input\r\n                                className=\"btnadd\" \r\n                                type=\"submit\" \r\n                                value=\"Añadir\"\r\n                            />                            \r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n      }    \r\n\r\n/*\r\n    state = { \r\n        data: this.props.DataUsers,\r\n        name: '',\r\n        email: '',\r\n        phone: ''       \r\n    }\r\n\r\n    onSubmit = e => {        \r\n        if(this.props.DataUsers.some(user => user.email === this.state.email)){            \r\n            swal({\r\n                title: \"Mensaje\",\r\n                text: \"El Correo \" +this.state.email+ \" se encuentra registrado por otro usuario, introduzca otro correo\",\r\n                icon: \"warning\",\r\n                button: \"Aceptar\"\r\n            });\r\n            this.textemail.focus();\r\n            e.preventDefault();\r\n        } else{\r\n            this.props.AddUser(this.state.name, this.state.email, this.state.phone); \r\n            swal({\r\n                title: \"Mensaje\",\r\n                text: \"Usuario Registrado\",\r\n                icon: \"success\",\r\n                button: \"Aceptar\"\r\n            });            \r\n            e.preventDefault(); \r\n        }              \r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }        \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"b-form\">\r\n                <div> \r\n                    <h2>Añadir Usuario</h2>\r\n                    <form \r\n                        onSubmit={this.onSubmit} \r\n                        className=\"form-addUser\" \r\n                        > \r\n                        <input \r\n                            name=\"name\"\r\n                            type=\"text\" \r\n                            placeholder=\"Escriba un nombre\" \r\n                            onChange={this.onChange} \r\n                            value={this.state.name}  \r\n                            required           \r\n                            autoFocus={true}   \r\n                            ref={ (input) => ( this.textname = input )}\r\n                        />\r\n                        \r\n                        <input  \r\n                            name=\"email\"\r\n                            type=\"email\" \r\n                            placeholder=\"Escriba un Email\" \r\n                            oonChange={this.onChange} \r\n                            value={this.state.email} \r\n                            required \r\n                            ref={ (input) => ( this.textemail = input )}\r\n                        />\r\n                        \r\n                        <input  \r\n                            name=\"phone\" \r\n                            type = \"number\"\r\n                            placeholder=\"Escriba un Telefono\" \r\n                            onChange={this.onChange} \r\n                            value={this.state.phone} \r\n                            required \r\n                            ref={ (input) => ( this.textPhone = input )}                                                           \r\n                        />\r\n                        \r\n                        <input\r\n                            className=\"btnEnviar\" \r\n                            type=\"submit\" \r\n                            value=\"Añadir\"\r\n                        /> \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    */\r\n}\r\n","import React, { Component } from 'react';\r\nimport swal from 'sweetalert';\r\nimport './EditUser.css';\r\n\r\nexport default class EditUser extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.state = {\r\n            id    : this.props.id,\r\n            fields: { \"name\"  : this.props.name,\r\n                      \"email\" : this.props.email,\r\n                      \"phone\" : this.props.phone\r\n            },\r\n            errors: {}           \r\n        }\r\n      }\r\n\r\n    handleValidation(e){\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n    \r\n        //Name\r\n        if(!fields[\"name\"]){\r\n          formIsValid = false;\r\n          errors[\"name\"] = \"Ingrese un Nombre\";\r\n        }\r\n    \r\n        if(typeof fields[\"name\"] !== \"undefined\"){\r\n          if(!fields[\"name\"].match(/^[a-zA-Z ]+$/)){\r\n            formIsValid = false;\r\n            errors[\"name\"] = \"El nombre debe contener solo letras\";\r\n          }      \t\r\n        }\r\n    \r\n        //Email\r\n        if(!fields[\"email\"]){\r\n          formIsValid = false;\r\n          errors[\"email\"] = \"Ingrese un Email\";\r\n        }\r\n    \r\n        if(typeof fields[\"email\"] !== \"undefined\"){\r\n          let lastAtPos = fields[\"email\"].lastIndexOf('@');\r\n          let lastDotPos = fields[\"email\"].lastIndexOf('.');\r\n\r\n          if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"Ingrese un Email valido\";\r\n          }\r\n          if(this.props.DataUsers.some(user => user.id !== this.state.id  && user.email.toUpperCase() === fields[\"email\"].toUpperCase() )){            \r\n            if(this.props.DataUsers.some(user => user.email.toUpperCase() === fields[\"email\"].toUpperCase() )){            \r\n                formIsValid = false;    \r\n                errors[\"email\"] = \"El Email: \"+fields[\"email\"]+\" se ecuentra registrado, Ingrese otro Email\";            \r\n            }  \r\n          }          \r\n        }\r\n    \r\n        //Phone\r\n        if(!fields[\"phone\"]){  \r\n          formIsValid = false;\r\n          errors[\"phone\"] = \"Ingrese un Numero de Telefono\";\r\n        }\r\n        \r\n        if(typeof fields[\"phone\"] !== \"undefined\" ){\r\n            let phonelenhth = fields[\"phone\"].length;\r\n            if( phonelenhth < 11 ){\r\n                formIsValid = false;\r\n                errors[\"phone\"] = \"Ingrese un numero de telefono correcto, incluyendo en codigo de la linea, debe contener 11 digitos\";\r\n            }           \r\n        }\r\n    \r\n        this.setState({errors: errors});\r\n        return formIsValid;\r\n      }     \r\n    \r\n      contactSubmit(e){\r\n        e.preventDefault(); \r\n        if(this.handleValidation()){\r\n            let fields = this.state.fields;    \r\n            this.props.SaveEdit(this.state.id, fields[\"name\"], fields[\"email\"], fields[\"phone\"]);\r\n                swal({\r\n                      title: \"Mensaje\",\r\n                      text: \"Datos Guardados\",\r\n                      icon: \"success\",\r\n                      button: \"Aceptar\"\r\n                });\r\n                this.props.GoBack(); \r\n        }     \r\n      }\r\n    \r\n      handleChange(field, e){    \t\t\r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;        \r\n        this.setState({fields});\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <div className=\"content-form\">                        \t\r\n                    <form name=\"contactform\" className=\"formAddUser\"  onSubmit= {this.contactSubmit.bind(this)}>\r\n                    <h2>Editar Datos Usuario </h2>  \r\n                        <div className=\"campo\">\r\n                            <input \r\n                                className=\"Campoinput\"\r\n                                refs=\"name\" \r\n                                type=\"text\" \r\n                                placeholder=\"Ingrese un Nombre\"\r\n                                autoFocus={true} \r\n                                onChange={this.handleChange.bind(this, \"name\")} \r\n                                value={this.state.fields[\"name\"]}\r\n                            />\r\n                            <span className=\"error\">{this.state.errors[\"name\"]}</span>\r\n                        </div>\r\n                        <div className=\"campo\">\r\n                            <input \r\n                                className=\"Campoinput\"\r\n                                refs=\"email\" \r\n                                type=\"text\" \r\n                                placeholder=\"Ingrese un Email\" \r\n                                onChange={this.handleChange.bind(this, \"email\")} \r\n                                value={this.state.fields[\"email\"]}\r\n                            />\r\n                            <span className=\"error\">{this.state.errors[\"email\"]}</span>                            \r\n                        </div>                      \r\n                        <div className=\"campo\">\r\n                            <input \r\n                                className=\"Campoinput\"\r\n                                refs=\"phone\" \r\n                                id=\"phone\"\r\n                                pattern=\"[0-9]{0,11}\" \r\n                                placeholder=\"Ingrese un numero de Telefono\" \r\n                                onChange={this.handleChange.bind(this, \"phone\")} \r\n                                value={this.state.fields[\"phone\"]}\r\n                                oonkeypress=\"if ( isNaN( String.fromCharCode(event.keyCode) )) return false;\"\r\n                            />\r\n                            <span className=\"error\">{this.state.errors[\"phone\"]}</span>                            \r\n                        </div> \r\n                        <div className=\"campo\">\r\n                            <input\r\n                                className=\"btnadd\" \r\n                                type=\"submit\" \r\n                                value=\"Guardar\"\r\n                            />                            \r\n                        </div>\r\n                    </form>\r\n                    <button className=\"btnGoBack\" onClick={this.props.GoBack} > \r\n                        Ir Atras                \r\n                    </button>                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n","import React, { Component } from 'react';\r\nimport swal from 'sweetalert';\r\nimport './Search.css';\r\nimport EditUser from '../edit/EditUser';\r\n\r\nexport default class Search extends Component {\r\n\r\n    state = {\r\n        errors: {},\r\n        data: this.props.DataUsers,\r\n        id : '',\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        found: false,\r\n        edit: false\r\n    }\r\n\r\nonChange = e => {\r\n    this.setState({\r\n        email: e.target.value\r\n    })\r\n}\r\n\r\nhandleValidation(){\r\n    let errors = {};\r\n    let formIsValid = true;\r\n\r\n    //Email\r\n    if(!this.state.email){\r\n      formIsValid = false;\r\n      errors[\"email\"] = \"Ingrese un Email valido\";\r\n    }\r\n\r\n    if(typeof this.state.email !== \"undefined\"){\r\n      let lastAtPos = this.state.email.lastIndexOf('@');\r\n      let lastDotPos = this.state.email.lastIndexOf('.');\r\n\r\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && this.state.email.indexOf('@@') === -1 && lastDotPos > 2 && (this.state.email.length - lastDotPos) > 2)) {\r\n        formIsValid = false;\r\n        errors[\"email\"] = \"Ingrese un Email valido\";\r\n      }         \r\n    }\r\n\r\n    this.setState({errors: errors});\r\n    return formIsValid;\r\n  }   \r\n\r\nonSubmit = e => {   \r\n    e.preventDefault();     \r\n    if( this.handleValidation() ){\r\n        const UserFound = this.props.DataUsers.filter( user => user.email.toUpperCase()  === this.state.email.toUpperCase()  );     \r\n        if(UserFound.length  === 1){ \r\n            this.setState({ \r\n                    id:UserFound[0].id, \r\n                    name:UserFound[0].name, \r\n                    email:UserFound[0].email, \r\n                    phone:UserFound[0].phone, \r\n                    found: true\r\n                });               \r\n        }else{\r\n            swal({\r\n                title: \"Mensaje\",\r\n                text: \"El Correo \" +this.state.email+ \" no se encuentra registrado\",\r\n                icon: \"error\",\r\n                button: \"Aceptar\"\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\ndeleteuser = () => {\r\n    this.props.deleteUser(this.state.id);\r\n    this.setState({ \r\n        id: '', \r\n        name: '', \r\n        email: '', \r\n        phone: '', \r\n        found: false\r\n    });    \r\n}\r\n\r\nedituser = () => {\r\n    this.setState({ edit: true });      \r\n}\r\n\r\nGoBack = () =>{\r\n    this.setState({ edit: false });    \r\n}\r\n\r\ncomponentDidMount() {\r\n    this.getData();\r\n    setInterval(this.getData, 1000);\r\n  }\r\n\r\n  getData = () => {\r\n    if( this.state.found  ){\r\n        const UserFound = this.props.DataUsers.filter( user => user.id === this.state.id );     \r\n        if(UserFound.length  === 1){ \r\n            this.setState({ \r\n                    id:UserFound[0].id, \r\n                    name:UserFound[0].name, \r\n                    email:UserFound[0].email, \r\n                    phone:UserFound[0].phone, \r\n                    found: true\r\n                });               \r\n        }\r\n    }\r\n  }\r\n\r\n    render() {   \r\n        return (\r\n            <div> \r\n                {\r\n                    this.state.edit? null\r\n                    :\r\n                    <div className=\"content\">\r\n                        <div className=\"content-form\">\r\n                            <div className=\"formAddUser \">                   \r\n                                <h2>Buscar Usuario</h2>\r\n                                <form onSubmit={this.onSubmit} className=\"form-search\"> \r\n                                    <div className=\"campo\">\r\n                                        <input \r\n                                            className=\"Campoinput\" \r\n                                            name=\"email\"\r\n                                            type=\"email\" \r\n                                            placeholder=\"Escriba un Email\" \r\n                                            onChange={this.onChange} \r\n                                            value={this.state.email} \r\n                                            required \r\n                                            ref={ (input) => ( this.textemail = input )}\r\n                                        />\r\n                                        <span className=\"error\">{this.state.errors[\"email\"]}</span>                                                                \r\n                                    </div>\r\n                                    <div className=\"campo\">\r\n                                        <input \r\n                                            className=\"btnEnviar\" \r\n                                            type=\"submit\" \r\n                                            value=\"Buscar\"                        \r\n                                        />\r\n                                    </div> \r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }               \r\n                {\r\n                    !this.state.found?\r\n                    null\r\n                    :this.state.edit ?                        \r\n                        <EditUser \r\n                            id={this.state.id} \r\n                            name={this.state.name} \r\n                            email={this.state.email} \r\n                            phone={this.state.phone} \r\n                            DataUsers={this.props.DataUsers}\r\n                            GoBack={this.GoBack} \r\n                            SaveEdit={this.props.SaveEdit} />\r\n                        :                        \r\n                        <div className=\"content\">                        \r\n                        <div className=\"data\">\r\n                            <div className=\"title-list\"> <h2> Datos del Usuario </h2> </div>\r\n                            <div className=\"r-title\">\r\n                              <div className=\"r-t-user\">  Nombre  </div>\r\n                              <div className=\"r-t-email\">  Email </div>                    \r\n                              <div className=\"r-t-phone\"> Telefono </div>\r\n                              <div className=\"r-t-action\" > Opcion </div>\r\n                              <br/>\r\n                            </div>  \r\n                            <div className=\"r-data-s\"> \r\n                              <div className=\"r-d-user\">  {this.state.name}  </div>\r\n                              <div className=\"r-d-email\">  {this.state.email} </div>                    \r\n                              <div className=\"r-d-phone\"> {this.state.phone} </div>\r\n                              <div className=\"r-d-action\" > \r\n                               <button className=\"btnEdit\" onClick={this.edituser } > \r\n                                    Editar                \r\n                                </button> \r\n                                <button className=\"btnDelete\" onClick={this.deleteuser} > \r\n                                    Eliminar                \r\n                                </button>                             \r\n                              </div>\r\n                              <br/>                             \r\n                            </div>                \r\n                          </div>\r\n                        </div>             \r\n                    } \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{ Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport logo from './logo.svg';\nimport './App.css';\nimport Data from './APIData/Data.json';\nimport View from './Post/users/view/view';\nimport FormAddUser from './Post/users/create/FormAddUser';\nimport EditUser from './Post/users/edit/EditUser';\nimport Search from './Post/users/search/Search';\n\nclass App extends Component {\n\n  state = { \n    data: Data.users,\n    showEditUser: false,\n    id: '',\n    name: '',\n    email: '',\n    phone: ''\n  }\n\n  AddUser = (username, useremail, userphone) =>{\n    const newUser = {\n      id: this.state.data.length + 1,\n      name: username,\n      email: useremail,\n      phone: userphone,      \n      state: false\n    }\n    this.setState({\n      data: [...this.state.data, newUser]\n    });    \n  }\n\n  deleteUser = (id) =>{     \n    const newData = this.state.data.filter( user => user.id !== id );     \n    this.setState({data: newData});\n    swal({\n      title: \"Mensaje\",\n      text: \"Usuario Eliminado\",\n      icon: \"success\",\n      button: \"Aceptar\"\n  });\n   }  \n\n  editUser = (id, name, email, phone) =>{\n    this.setState({ showEditUser: true, id:id, name:name, email:email, phone:phone});\n  }\n\n  GoBack = () =>{\n    this.setState({ showEditUser: false, id:'', name:'', email:'', phone:'' });    \n  }\n\n  SaveEdit = (id, name, email, phone) => {\n    const newData = this.state.data.map( user => {\n      if ( user.id === id ) {\n        user.name = name;\n        user.email = email;\n        user.phone = phone;\n      }\n      return user;\n    });\n    this.setState({ data: newData });\n  } \n\n  render(){    \n    return (          \n      <Router> \n      <div className=\"App\"> \n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p> MY App LimonByte </p>\n      </header>        \n        <ul>\n          <li> <Link style={linkStyle} to=\"/\">Usuarios</Link> </li>\n          <li> <Link style={linkStyle} to=\"/add\">Añadir</Link> </li>\n          <li> <Link style={linkStyle} className=\"link\" to=\"/search\">Buscar </Link> </li>\n        </ul>\n        <hr />\n        <Switch>\n          <Route exact path=\"/\">            \n            { \n              this.state.showEditUser ?\n              <EditUser \n                id={this.state.id} \n                name={this.state.name} \n                email={this.state.email} \n                phone={this.state.phone} \n                DataUsers = { this.state.data } \n                GoBack={this.GoBack} \n                SaveEdit={this.SaveEdit} \n              />\n              :\n                <div className=\"content\">\n                  <div className=\"data\">\n                    <div className=\"title-list\"> <h2> Usuarios </h2> </div>\n                    <div className=\"r-title\"> \n                      <div className=\"r-t-user\">  Nombre  </div>\n                      <div className=\"r-t-email\">  Email </div>                    \n                      <div className=\"r-t-phone\"> Telefono </div>\n                      <div className=\"r-t-action\" > Opcion </div>\n                      <br/>\n                    </div>  \n                    <div className=\"r-data\"> \n                      <View \n                        DataUsers = { this.state.data } \n                        deleteUser={this.deleteUser} \n                        editUser={this.editUser}\n                      />\n                    </div>                \n                  </div>\n                </div>            \n              }  \n          </Route>\n          <Route path=\"/add\">\n            <div className=\"\"> \n              <FormAddUser \n                AddUser = {this.AddUser} \n                DataUsers = { this.state.data } \n              />\n            </div>\n          </Route>\n          <Route path=\"/search\">\n            <Search \n              showEditUser={this.state.showEditUser}  \n              id={this.state.id}\n              name={this.state.name}\n              email={this.state.email}\n              phone={this.state.phone}\n              DataUsers={this.state.data} \n              deleteUser={this.deleteUser} \n              GoBack={this.GoBack}\n              SaveEdit={this.SaveEdit}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </Router> \n  )}\n}\n\nconst linkStyle =  {\n  color: '#ffffff',\n  textDecoration:'none',\n  fontWeight: 'bold',\n\n  Hover:{\n    backgroungColor:'#093ea8'\n  }\n}\n\nexport default (App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}